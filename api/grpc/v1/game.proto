syntax = "proto3";

option java_package = "net.alteiar.lendyr.grpc.model.v1.game";
option java_multiple_files = true;
option optimize_for = SPEED;

package model.game;

import "persona.proto";
import "combat.proto";
import "player.proto";
import "item.proto";
import "map.proto";
import "events.proto";

service LendyrGameService {
  // Load a new game
  rpc load(LendyrLoadGameRequest) returns (EmptyResponse);

  // Save the game
  rpc save(LendyrSaveGameRequest) returns (EmptyResponse);

  //
  rpc pause(EmptyResponse) returns(EmptyResponse);
  rpc resume(EmptyResponse) returns(EmptyResponse);

  // Load item
  rpc getItems(EmptyResponse) returns (LendyrItems);

  // Load maps
  rpc getMaps(LendyrGetById) returns (model.map.LendyrMap);

  // Get personas
  rpc getPersona(LendyrGetById) returns (model.persona.LendyrPersona);

  // Retrieve current state
  rpc currentState(EmptyResponse) returns (LendyrGameState);

  // register to all the world events
  rpc registerActions(EmptyResponse)returns (stream model.events.LendyrGameEvent);

  // Combat
  rpc act(combat.LendyrAction) returns (LendyrActionResponse);

  // End the turn
  rpc endTurn(EmptyResponse) returns (EmptyResponse);
}

service LendyrPersonaService {

  //rpc create(model.persona.LendyrPersona) returns (CreatedResponse);

  rpc get(LendyrGetById) returns (model.persona.LendyrPersona);
}

message LendyrLoadGameRequest {
  string saveName = 1;
}

message LendyrSaveGameRequest {
  string saveName = 1;
}

message LendyrGameState {
  model.combat.LendyrEncounter encounter = 2;
  //repeated model.persona.LendyrPersona persona = 3;
  model.player.LendyrPlayer players = 4;
  model.map.LendyrWorld map = 5;
  model.events.LendyrGameMode playState = 6;
}

message LendyrActionResponse {
  LendyrActionResultStatusType type = 1;
  string errorReason = 2;
}

enum LendyrActionResultStatusType {
  UNKNOWN = 0;
  SUCCESS = 1;

  // Server Errors
  NOT_IMPLEMENTED = 10;
  UNEXPECTED = 11;

  // Client Errors
  NOT_FOUND = 20;
  NOT_YOUR_TURN = 21;
  NOT_ENOUGH_ACTION = 22;
  NOT_ALLOWED = 23;
}

message EmptyResponse{}

message CreatedResponse {
  bytes id = 1;
}

message LendyrGetById {
  bytes id = 1;
}

message LendyrItems {
  repeated  model.item.LendyrItem items = 1;
}